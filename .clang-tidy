# Blacklist instead of whitelist
# Reasoning for disabled checks:
# - altera: Altera are FPGA chips, not relevant for us
# - cppcoreguidelines-avoid-magic-numbers: We try to avoid magic numbers, but sometimes it's just easier to read
# - cppcoreguidelines-pro-type-reinterpret-cast: We use reinterpret_cast for type punning
# - cppcoreguidelines-pro-type-union-access: We use unions for type punning
# - fuchsia: Fuchsia is a Google OS with its own coding style
# - google-build-using-namespace: using namespace is fine in .cpp files, especially for unit tests
# - google-readability-braces-around-statements: We don't want braces around single line if statements
# - hicpp-braces-around-statements: Same as above
# - llvm-header-guard: We use #pragma once
# - llvmlibc: checks only relevant for LLVM libc
# - misc-non-private-member-variables-in-classes: I like using structs
# - readability-braces-around-statements: Same as above
# - readability-identifier-length: Who decided that 1 letter variable names are bad? It depends on the context
# - readability-magic-numbers: Same as above
# - readability-uppercase-literal-suffix: I don't see a problem with 1.0f
Checks: >-
  *,
  -altera-*,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-union-access,
  -fuchsia-*,
  fuchsia-multiple-inheritance, 
  -google-build-using-namespace,
  -google-readability-braces-around-statements,
  -hicpp-braces-around-statements,
  -llvm-header-guard,
  -llvmlibc-*,
  -misc-non-private-member-variables-in-classes,
  -readability-braces-around-statements, 
  -readability-identifier-length, 
  -readability-magic-numbers, 
  -readability-uppercase-literal-suffix
WarningsAsErrors: ''
CheckOptions:
  - key: bugprone-argument-comment.StrictMode
    value: 'true'
# Prefer using enum classes with 2 values for parameters instead of bools
  - key: bugprone-argument-comment.CommentBoolLiterals
    value: 'true'
  - key: bugprone-misplaced-widening-cast.CheckImplicitCasts
    value: 'true'
  - key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression
    value: 'true'
  - key: bugprone-suspicious-string-compare.WarnOnLogicalNotComparison
    value: 'true'
  - key: readability-simplify-boolean-expr.ChainedConditionalReturn
    value: 'true'
  - key: readability-simplify-boolean-expr.ChainedConditionalAssignment
    value: 'true'
  - key: readability-uniqueptr-delete-release.PreferResetCall
    value: 'true'
  - key: cppcoreguidelines-init-variables.MathHeader
    value: <cmath>
  - key: cppcoreguidelines-narrowing-conversions.PedanticMode
    value: 'true'
  - key: readability-else-after-return.WarnOnUnfixable
    value: 'true'
  - key: readability-else-after-return.WarnOnConditionVariables
    value: 'true'
  - key: readability-inconsistent-declaration-parameter-name.Strict
    value: 'true'
  - key: readability-qualified-auto.AddConstToQualified
    value: 'true'
  - key: readability-redundant-access-specifiers.CheckFirstDeclaration
    value: 'true'
  - key: readability-function-cognitive-complexity.IgnoreMacros
    value: 'true'
  # Identifier styles
  - key: readability-identifier-naming.AbstractClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassConstantCase
    value: lower_case
  - key: readability-identifier-naming.ClassMemberCase
    value: lower_case
  - key: readability-identifier-naming.ClassMethodCase
    value: lower_case
  - key: readability-identifier-naming.ConstantCase
    value: lower_case
  - key: readability-identifier-naming.ConstantPrefix
    value: k_
  - key: readability-identifier-naming.ConstantMemberCase
    value: lower_case
  - key: readability-identifier-naming.ConstantParameterCase
    value: lower_case
  - key: readability-identifier-naming.ConstantPointerParameterCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprFunctionCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprMethodCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprVariableCase
    value: lower_case
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantCase
    value: aNy_CasE
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.GlobalConstantCase
    value: lower_case
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: k_
  - key: readability-identifier-naming.GlobalConstantPointerCase
    value: lower_case
  - key: readability-identifier-naming.GlobalFunctionCase
    value: lower_case
  - key: readability-identifier-naming.GlobalPointerCase
    value: lower_case
  - key: readability-identifier-naming.GlobalVariableCase
    value: lower_case
  - key: readability-identifier-naming.InlineNamespaceCase
    value: lower_case
  - key: readability-identifier-naming.LocalConstantCase
    value: lower_case
  - key: readability-identifier-naming.LocalConstantPointerCase
    value: lower_case
  - key: readability-identifier-naming.LocalPointerCase
    value: lower_case
  - key: readability-identifier-naming.LocalVariableCase
    value: lower_case
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.MethodCase
    value: lower_case
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.ParameterPackCase
    value: lower_case
  - key: readability-identifier-naming.PointerParameterCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.PrivateMethodCase
    value: lower_case
  - key: readability-identifier-naming.ProtectedMemberCase
    value: lower_case
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: _
  - key: readability-identifier-naming.ProtectedMethodCase
    value: lower_case
  - key: readability-identifier-naming.PublicMemberCase
    value: lower_case
  - key: readability-identifier-naming.PublicMethodCase
    value: lower_case
  - key: readability-identifier-naming.ScopedEnumConstantCase
    value: aNy_CasE
  - key: readability-identifier-naming.StaticConstantCase
    value: lower_case
  - key: readability-identifier-naming.StaticVariableCase
    value: lower_case
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TypeAliasCase
    value: aNy_CasE
  - key: readability-identifier-naming.TypedefCase
    value: aNy_CasE
  - key: readability-identifier-naming.TypeTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.UnionCase
    value: lower_case
  - key: readability-identifier-naming.ValueTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.VirtualMethodCase
    value: lower_case
